/***********************************************************
This procedure is generated by the query 74 template
in TPC-DS. This query is to display customers with both 
store and web sales in consecutive years for whom the 
increase in web sales exceeds the increase in store sales 
for a specified year. The scalar parameter is threshold.

The detail steps for generating the procedure with loops 
by transforming CTE query are as follows. Each CTE table
variable is transformed to the SQL assignment statement
Then, each query with table variables is decomposed.

In addition, we only caclulates year_total when the count of year_total 
is bigger than threshold for adding branch to block inlining.

Finally, for each scalar parameter that is used in the query
template, the loop, which calculates the query iteratively for
every range of parameter, is inserted. 
**************************************************************/
create procedure "func7_loop"(in _year integer ) as begin

while :_year < 2002 do 
v1 = SELECT c_customer_id    customer_id, 
                c_first_name     customer_first_name, 
                c_last_name      customer_last_name, 
                d_year           AS year1, 
                Sum(ss_net_paid) year_total, 
                's'              sale_type 
         FROM   customer, 
                store_sales, 
                date_dim 
         WHERE  c_customer_sk = ss_customer_sk 
                AND ss_sold_date_sk = d_date_sk 
                AND d_year IN ( :_year, :_year + 1 ) 
         GROUP  BY c_customer_id, 
                   c_first_name, 
                   c_last_name, 
                   d_year ;

v2 = SELECT c_customer_id    customer_id, 
                c_first_name     customer_first_name, 
                c_last_name      customer_last_name, 
                d_year           AS year1, 
                Sum(ws_net_paid) year_total, 
                'w'              sale_type 
         FROM   customer, 
                web_sales, 
                date_dim 
         WHERE  c_customer_sk = ws_bill_customer_sk 
                AND ws_sold_date_sk = d_date_sk 
                AND d_year IN ( :_year, :_year + 1 ) 
         GROUP  BY c_customer_id, 
                   c_first_name, 
                   c_last_name, 
                   d_year;
year_total = select * from :v1 union all select * from :v2;

t_s_firstyear = select * from :year_total;
t_s_secyear = select * from :year_total;
t_w_firstyear = select * from :year_total;
t_w_secyear = select * from :year_total;


SELECT t_s_secyear.customer_id, 
               t_s_secyear.customer_first_name, 
               t_s_secyear.customer_last_name 
FROM   :t_s_firstyear t_s_firstyear, 
       :t_s_secyear t_s_secyear, 
       :t_w_firstyear t_w_firstyear, 
       :t_w_secyear t_w_secyear 
WHERE  t_s_secyear.customer_id = t_s_firstyear.customer_id 
       AND t_s_firstyear.customer_id = t_w_secyear.customer_id 
       AND t_s_firstyear.customer_id = t_w_firstyear.customer_id 
       AND t_s_firstyear.sale_type = 's' 
       AND t_w_firstyear.sale_type = 'w' 
       AND t_s_secyear.sale_type = 's' 
       AND t_w_secyear.sale_type = 'w' 
       AND t_s_firstyear.year1 = :_year 
       AND t_s_secyear.year1 = :_year + 1
       AND t_w_firstyear.year1 = :_year 
       AND t_w_secyear.year1 = :_year + 1
       AND t_s_firstyear.year_total > 0 
       AND t_w_firstyear.year_total > 0 
       AND CASE 
             WHEN t_w_firstyear.year_total > 0 THEN t_w_secyear.year_total / 
                                                    t_w_firstyear.year_total 
             ELSE NULL 
           END > CASE 
                   WHEN t_s_firstyear.year_total > 0 THEN 
                   t_s_secyear.year_total / 
                   t_s_firstyear.year_total 
                   ELSE NULL 
                 END 
ORDER  BY 1, 
          2, 
          3
LIMIT 100; 
_year = :_year + 1;
end while;
end;


----- call func7_loop
call "func7_loop"(2000);